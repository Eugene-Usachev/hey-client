<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fdbe5b4a-4c68-4236-9151-99682e935486" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/next.config.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/(pagesWithLayout)/layout.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/(pagesWithLayout)/profile/page.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/layout.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/page.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/registration/components/Header/Header.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/registration/components/Header/Header.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/registration/components/LoginBlock/LoginBlock.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/registration/components/LoginBlock/LoginBlock.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/registration/components/LoginWindow/LoginWindow.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/registration/components/LoginWindow/LoginWindow.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/registration/components/RegistrationBackground/RegistrationBackground.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/registration/components/RegistrationBackground/RegistrationBackground.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/registration/components/RegistrationBlock/RegistrationBlock.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/registration/components/RegistrationBlock/RegistrationBlock.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/registration/components/SignUpBlock/SignUpBlock.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/registration/components/SignUpBlock/SignUpBlock.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/registration/page.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/ThreePoints/ThreePoints.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/ThreePoints/ThreePoints.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/hooks/UseInitialComponent.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/hooks/useLocalStorage.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/requests/auth.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/types/http.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/index.html" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/public/favicon.svg" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/icon.svg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Setting1.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/Input/Input.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/Input/Input.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/ReferComponent/ReferComponent.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/ReferComponent/ReferComponent.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/config.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/dev/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/dev/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/dev/palette.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/dev/palette.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/dev/previews.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/dev/previews.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/dev/useInitial.ts" beforeDir="false" afterPath="$PROJECT_DIR$/dev/useInitial.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/hooks/useDebounce.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/hooks/useDebounce.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/hooks/useTheme.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/hooks/useTheme.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/libs/hand/hand.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/libs/hand/hand.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/Page404.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/Registration.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/registration/Header/Header.module.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/registration/Header/Header.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/registration/LoginBlock/LoginBlock.module.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/registration/LoginBlock/LoginBlock.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/registration/LoginWindow/LoginWindow.module.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/registration/LoginWindow/LoginWindow.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/registration/RegistrationBackground/RegistrationBackground.module.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/registration/RegistrationBackground/RegistrationBackground.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/registration/RegistrationBlock/RegistrationBlock.module.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/registration/RegistrationBlock/RegistrationBlock.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/registration/SignUpBlock/SignUpBlock.module.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/registration/SignUpBlock/SignUpBlock.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/styles/colors.scss" beforeDir="false" afterPath="$PROJECT_DIR$/src/styles/colors.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/styles/index.scss" beforeDir="false" afterPath="$PROJECT_DIR$/src/styles/index.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/getTextForLanguage.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/getTextForLanguage.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/initTheme.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/initTheme.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vite-env.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.node.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vite.config.ts" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="com.haulmont.rcb.palette" />
        <option value="com.haulmont.rcb.previews" />
        <option value="com.haulmont.rcb.index" />
        <option value="com.haulmont.rcb.useInitial" />
        <option value="com.haulmont.rcb.function_component" />
        <option value="com.haulmont.rcb.arrow_function_component" />
        <option value="SCSS File" />
        <option value="TypeScript JSX File" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../GOROOT/go1.20.2" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2P1KiIxmCMICIe3XHgv37yYHjEP" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;NewWatcherDialog.advanced.open&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/domains/justgo&quot;,
    &quot;list.type.of.created.stylesheet&quot;: &quot;SCSS&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;ts.external.directory.path&quot;: &quot;D:\\domains\\Hey\\client1\\node_modules\\typescript\\lib&quot;
  }
}</component>
  <component name="ReactDesignerToolWindowState">
    <option name="myId2Visible">
      <map>
        <entry key="com.haulmont.rcb.reactComponents" value="false" />
        <entry key="com.haulmont.rcb.reactInspector" value="false" />
      </map>
    </option>
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\domains\Hey\server" />
      <recent name="D:\domains\Hey\client\src\app\registration" />
      <recent name="D:\domains\Hey\client\src\app\(pagesWithLayout)" />
      <recent name="D:\domains\Hey\client\src\app" />
      <recent name="D:\domains\Hey\client\public" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\domains\Hey\client\src\hooks" />
      <recent name="D:\domains\Hey\client\src\app\(pagesWithLayout)\profile" />
      <recent name="D:\domains\Hey\client\src\styles" />
      <recent name="D:\domains\Hey\client\src\app" />
      <recent name="D:\domains\Hey\client\src" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.Start the server">
    <configuration name="Start the server" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="../server/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="dev" type="js.build_tools.npm" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="dev" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.Start the server" />
      <item itemvalue="npm.dev" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>